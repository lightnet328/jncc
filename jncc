readonly ROOT=$(cd $(dirname $0) && pwd)
readonly NAME="Juniper Network Connect Client"
readonly SCRIPT_NAME=$(basename ${0})
readonly CONFIG_FILE=${ROOT}/jncc.config
readonly PID_FILE=${ROOT}/jncc.pid
readonly VERSION=0.0.1
readonly TEMP="$ROOT/`cat /dev/urandom| LC_CTYPE=C tr -dc 'A-Za-z0-9'| head -c 32`"
readonly CONNECTED=0
readonly NOT_CONNECTED=1

error() {
    echo "$@" 1>&2
}

abort() {
   echo "$@" 1>&2
   exit 1
}

version() {
    echo "$NAME version $VERSION"
}

usage() {
    cat <<EOF
`version`
$SCRIPT_NAME is a tool for connect to Juniper Networks by openconnect.

Usage:
    $SCRIPT_NAME [command] [<options>]

Options:
    --version, -v     print $SCRIPT_NAME version
    --help, -h        print this

Available commands:
    connect     Connect VPN
    disconnect  Disconnect VPN
EOF
}

check_root() {
    if [ "$USER" != "root" ]; then
        cat <<EOF
$SCRIPT_NAME requires root.
You should try this command:
$ sudo $0 $1
EOF
        exit 1
    fi
}

check_config() {
    [ -n "$ID" ] || abort "\$ID is empty."
    [ -n "$SERVER" ] || abort "\$SERVER is empty."
    [ -n "$SPLIT_HOSTS" ] || abort "\$SPLIT_HOSTS is empty."
}

is_connected() {
    if [ -e "$PID_FILE" ]; then
        return $CONNECTED
    else
        return $NOT_CONNECTED
    fi
}

connect() {
    is_connected && abort "Already connected."
}

main() {
    source $CONFIG_FILE
    check_config
    case "$1" in
        "connect")
            check_root $1
            connect
            ;;
        "disconnect")
            ;;
        "-h" | "--help")
            usage
            ;;
        "-v" | "--version")
            version
            ;;
        *)
            usage
            ;;
    esac
    exit 0
}

main $@
